{
  "name": "01_AI_Coding_Station - üêç Python Development",
  "version": "2.0.0-alpha.86",
  "namespace": "alpha",
  
  "project": {
    "name": "01_AI_Coding_Station - üêç Python Development",
    "namespace": "alpha",
    "path": "D:\\03_Git\\02_Python\\01_AI_Coding_Station",
    "working_directory": "D:\\03_Git\\02_Python\\01_AI_Coding_Station",
    "description": "Python development environment with AI-powered coding assistance",
    "environment": "development"
  },
  
  "orchestrator": {
    "maxAgents": 10,
    "maxConcurrentAgents": 8,
    "defaultTopology": "hierarchical",
    "strategy": "development",
    "memoryEnabled": true,
    "coordinationType": "queen-led",
    "faultTolerance": {
      "strategy": "retry-with-learning",
      "maxRetries": 3,
      "byzantineFaultTolerance": true,
      "healthCheckInterval": 30000,
      "fallbackEnabled": true,
      "autoRecovery": true
    }
  },
  
  "agents": {
    "selected": [
      "queen",
      "backend-dev",
      "frontend-dev",
      "system-architect",
      "tester",
      "performance-tester",
      "security-tester",
      "devops-engineer",
      "api-documenter",
      "pentester"
    ],
    "models": {
      "queen": "claude-3-opus-20240229",
      "workers": "claude-3-sonnet-20240229",
      "fallback": "claude-3-haiku-20240307"
    },
    "queen_model": "claude-3-opus-20240229",
    "worker_model": "claude-3-sonnet-20240229",
    "spawning": {
      "autoSpawn": true,
      "maxAge": "2h",
      "healthCheck": true,
      "batchSize": 5,
      "priorityQueuing": true
    },
    "specialization": {
      "queen": {
        "type": "strategic",
        "capabilities": ["coordination", "planning", "delegation", "monitoring"],
        "priority": "critical",
        "tools": "*",
        "verification": ["task-validation", "result-aggregation"],
        "truthThreshold": 0.98
      },
      "backend-dev": {
        "capabilities": ["python-development", "api-design", "database-operations", "testing"],
        "languages": ["python", "sql", "bash"],
        "frameworks": ["django", "flask", "fastapi", "sqlalchemy"],
        "verification": ["syntax-check", "type-check", "unit-test"],
        "truthThreshold": 0.95,
        "tools": "Read, Write, Edit, MultiEdit, Bash, Grep, Search",
        "maxFilesPerOperation": 15
      },
      "frontend-dev": {
        "capabilities": ["ui-development", "javascript", "css", "responsive-design"],
        "languages": ["javascript", "typescript", "html", "css"],
        "frameworks": ["react", "vue", "tailwind"],
        "verification": ["lint", "build", "browser-test"],
        "truthThreshold": 0.93,
        "tools": "Read, Write, Edit, Search, Bash(npm:*), Bash(yarn:*)"
      },
      "system-architect": {
        "capabilities": ["system-design", "architecture-patterns", "scalability-planning"],
        "verification": ["design-review", "pattern-validation"],
        "truthThreshold": 0.96,
        "tools": "Read, Search, Write, Edit",
        "documentation": true
      },
      "tester": {
        "capabilities": ["unit-testing", "integration-testing", "test-automation"],
        "frameworks": ["pytest", "unittest", "selenium", "playwright"],
        "verification": ["test-execution", "coverage-check"],
        "truthThreshold": 0.90,
        "coverageTarget": 85,
        "tools": "Read, Bash(python:test*), Bash(pytest:*), Search"
      },
      "performance-tester": {
        "capabilities": ["load-testing", "performance-profiling", "optimization"],
        "tools_required": ["locust", "cProfile", "memory_profiler"],
        "verification": ["benchmark-run", "metrics-analysis"],
        "truthThreshold": 0.92,
        "tools": "Read, Bash, Search"
      },
      "security-tester": {
        "capabilities": ["vulnerability-scanning", "penetration-testing", "security-audit"],
        "verification": ["OWASP-check", "dependency-scan", "secret-detection"],
        "truthThreshold": 0.98,
        "tools_required": ["bandit", "safety", "semgrep"],
        "tools": "Read, Bash, Search, Grep"
      },
      "devops-engineer": {
        "capabilities": ["ci-cd", "containerization", "deployment", "monitoring"],
        "technologies": ["docker", "kubernetes", "github-actions", "terraform"],
        "verification": ["deployment-check", "health-check"],
        "truthThreshold": 0.95,
        "tools": "Read, Write, Edit, Bash, Search"
      },
      "api-documenter": {
        "capabilities": ["api-documentation", "openapi-spec", "markdown-generation"],
        "verification": ["doc-validation", "example-check"],
        "truthThreshold": 0.90,
        "tools": "Read, Write, Edit, Search"
      },
      "pentester": {
        "capabilities": ["penetration-testing", "exploit-development", "security-assessment"],
        "verification": ["vulnerability-validation", "exploit-verification"],
        "truthThreshold": 0.99,
        "tools": "Read, Bash, Search, Grep",
        "restricted": true
      }
    }
  },
  
  "swarm": {
    "topology": "hierarchical",
    "task": "Im fenster Launch hive, steht hinter Console output, immer noch external terminal, allerdings soll bis zum starten von claude-flow, der interne output erfolgen! Also bis dahin Console output verwenden. unabh√§ngig davon welchen status die checkbox external terminal hat, damit ist einfach nur gemeint, in wechen wsl fenster claude startet.",
    "queen_type": "strategic",
    "coordination": {
      "mode": "distributed",
      "syncInterval": 5000,
      "consensusRequired": false,
      "votingThreshold": 0.6
    },
    "communication": {
      "protocol": "message-passing",
      "queueSize": 100,
      "timeout": 30000
    }
  },
  
  "memory": {
    "backend": "sqlite",
    "persistentSessions": true,
    "database": ".swarm/memory.db",
    "tables": 12,
    "cacheSizeMB": 1024,
    "compression": true,
    "distributedSync": true,
    "namespaces": ["default", "sparc", "neural", "coordination", "python-dev"],
    "retentionDays": 30,
    "autoBackup": true,
    "backupInterval": "6h"
  },
  
  "neural": {
    "enabled": true,
    "models": 27,
    "wasmSimd": true,
    "training": {
      "patterns": ["coordination", "code-generation", "bug-detection", "optimization"],
      "epochs": 50,
      "learningRate": 0.001,
      "batchSize": 32,
      "adaptiveLearning": true
    },
    "inference": {
      "cacheResults": true,
      "parallelInference": true,
      "maxBatchSize": 64
    }
  },
  
  "hooks": {
    "enabled": true,
    "types": [
      "pre-task",
      "post-task",
      "pre-edit",
      "post-edit",
      "pre-command",
      "post-command",
      "session-start",
      "session-end",
      "pre-search",
      "post-search",
      "pre-analysis",
      "post-analysis",
      "error-recovery",
      "notify"
    ],
    "automation": {
      "agentAssignment": true,
      "performanceTracking": true,
      "errorRecovery": true,
      "autoFormat": true,
      "testOnSave": true,
      "lintOnEdit": true,
      "commitOnSuccess": false
    },
    "custom": [
      {
        "name": "python-formatter",
        "trigger": "post-edit",
        "matcher": "*.py",
        "command": "black --line-length 100"
      },
      {
        "name": "type-checker",
        "trigger": "post-edit",
        "matcher": "*.py",
        "command": "mypy --strict"
      }
    ]
  },
  
  "performance": {
    "parallelExecution": true,
    "tokenOptimization": true,
    "batchProcessing": true,
    "timeout": 300000,
    "maxOutputSize": 500000,
    "tokenLimit": 100000,
    "streaming": true,
    "caching": {
      "enabled": true,
      "ttl": 3600,
      "maxSize": "2GB"
    }
  },
  
  "security": {
    "monitoring": true,
    "cryptographicSigning": true,
    "auditTrail": true,
    "sandboxing": true,
    "secretsManagement": {
      "enabled": true,
      "vault": ".secrets",
      "encryption": "AES-256"
    },
    "permissions": {
      "fileSystem": {
        "read": ["./", "../"],
        "write": ["./"],
        "deny": ["/etc", "/sys", "/proc"]
      },
      "network": {
        "allowed": ["localhost", "127.0.0.1"],
        "denied": ["0.0.0.0/0"]
      }
    }
  },
  
  "telemetry": {
    "enabled": true,
    "tokenTracking": true,
    "costAnalysis": true,
    "realTimeMonitoring": true,
    "exportFormat": "json",
    "metrics": {
      "collectInterval": 5000,
      "aggregateInterval": 60000,
      "retention": "7d"
    }
  },
  
  "settings": {
    "memorySize": "1GB",
    "parallelExecution": true,
    "verboseLogging": true,
    "debugMode": false,
    "colorOutput": true,
    "progressBars": true,
    "notifications": {
      "enabled": true,
      "onSuccess": true,
      "onError": true,
      "onCompletion": true
    }
  },
  
  "environment": {
    "variables": {
      "ANTHROPIC_MODEL": "claude-3-sonnet-20240229",
      "CLAUDE_FLOW_MAX_AGENTS": "10",
      "CLAUDE_FLOW_MEMORY_PATH": ".swarm/memory.db",
      "CLAUDE_FLOW_DEBUG": "verbose",
      "CLAUDE_FLOW_HOOKS_ENABLED": "true",
      "BASH_DEFAULT_TIMEOUT_MS": "300000",
      "BASH_MAX_TIMEOUT_MS": "600000",
      "FORCE_COLOR": "1",
      "CI": "false"
    },
    "paths": {
      "project": "D:\\03_Git\\02_Python\\01_AI_Coding_Station",
      "config": ".claude-flow/saved-configs",
      "logs": ".claude-flow/logs",
      "memory": ".swarm",
      "cache": ".claude-flow/cache"
    }
  },
  
  "workflows": {
    "default": "development",
    "available": ["development", "testing", "deployment", "maintenance"],
    "current": {
      "name": "python-development",
      "stages": [
        "requirements-analysis",
        "architecture-design",
        "implementation",
        "testing",
        "documentation",
        "review"
      ]
    }
  },
  
  "mcp": {
    "servers": {
      "claude-flow": {
        "enabled": true,
        "command": "npx",
        "args": ["-y", "claude-flow@alpha", "mcp", "start"]
      },
      "github": {
        "enabled": false,
        "command": "npx",
        "args": ["-y", "mcp-server-github"]
      }
    }
  },
  
  "codex_mode": false,
  "preset": "üêç Python Development",
  "metadata": {
    "created": "2025-01-19T13:18:40Z",
    "modified": "2025-01-19T13:18:40Z",
    "version": "2.0.0-alpha.86",
    "author": "AI Coding Station",
    "description": "Complete configuration for Python development with claude-flow hive mind"
  }
}